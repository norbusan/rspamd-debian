redis {
  servers = "${REDIS_ADDR}:${REDIS_PORT}";
}
lua = "${TESTDIR}/lua/test_coverage.lua";
options = {
	filters = "fuzzy_check";
	pidfile = "${TMPDIR}/rspamd.pid";
	control_socket = "${TMPDIR}/rspamd.sock mode=0600";
	url_tld = "${TESTDIR}/../lua/unit/test_tld.dat";
	dns {
		retransmits = 10;
		timeout = 2s;
	}
}
logging = {
	type = "file",
	level = "debug"
	filename = "${TMPDIR}/rspamd.log"
}
metric = {
	name = "default",
	actions = {
		reject = 100500,
	}
	unknown_weight = 1
        symbol {
            weight = 10.0;
            name = "${FLAG1_SYMBOL}";
        }
        symbol {
            weight = -1.0;
            name = "${FLAG2_SYMBOL}";
        }
}

worker {
	type = normal
	bind_socket = "${LOCAL_ADDR}:${PORT_NORMAL}";
	count = 1
	task_timeout = 60s;
}

worker {
        type = controller
        bind_socket = "${LOCAL_ADDR}:${PORT_CONTROLLER}";
        count = 1
        secure_ip = ["${LOCAL_ADDR}"];
	stats_path = "${TMPDIR}/stats.ucl";
}

worker {
	count = 1;
	bind_socket = "${LOCAL_ADDR}:${PORT_FUZZY}";
	type = "fuzzy";
	hashfile = "${TMPDIR}/fuzzy.db";
	allow_update = ["${LOCAL_ADDR}"];
${SETTINGS_FUZZY_WORKER}
}

fuzzy_check {
	min_bytes = 100;
	timeout = 1s;
	retransmits = 10;

	rule {
	  min_bytes = 0;
	  min_length = 0;
		algorithm = "${ALGORITHM}";
		servers = "${LOCAL_ADDR}:${PORT_FUZZY}";
		symbol = "R_TEST_FUZZY";
		max_score = 10.0;
		mime_types = ["application/*"];
		read_only = false;
		skip_unknown = true;
		skip_hashes = "${TMPDIR}/skip_hash.map";
${SETTINGS_FUZZY_CHECK}
		fuzzy_map = {
			${FLAG1_SYMBOL} {
				max_score = 10.0;
				flag = ${FLAG1_NUMBER};
			}
			${FLAG2_SYMBOL} {
				max_score = 1.0;
				flag = ${FLAG2_NUMBER};
			}
		}
	}
}
