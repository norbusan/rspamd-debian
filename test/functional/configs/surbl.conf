surbl {
    "whitelist" = [
    "rspamd-test.com"
  ];
  rules {
    "RSPAMD_URIBL" {
      suffix = "test.uribl";
      check_dkim = true;
      check_emails = true;
      images = false;
      process_script =<<EOD
function(url, suffix)
  local cr = require "rspamd_cryptobox_hash"
  local h = cr.create(url):base32():sub(1, 32)
  return string.format("%s.%s", h, suffix)
end
EOD;
    }
    "DBL" {
      suffix = "test2.uribl";
      no_ip = true;
      check_emails = true;
      check_dkim = true;
      ips = {
        # spam domain
        DBL_SPAM = "127.0.1.2";
        # phish domain
        DBL_PHISH = "127.0.1.4";
      }
    }
    "URIBL_MULTI" {
      suffix = "test3.uribl";
      check_dkim = true;
      check_emails = true;
      bits {
        URIBL_BLOCKED = 1;
        URIBL_BLACK = 2;
        URIBL_GREY = 4;
        URIBL_RED = 8;
      }
    }
    "SPAMHAUS_ZEN_URIBL" {
      suffix = "test4.uribl";
      resolve_ip = true;
      check_emails = true;
      ips {
        URIBL_SBL = "127.0.0.2";
        URIBL_SBL_CSS = "127.0.0.3";
        URIBL_XBL = ["127.0.0.4", "127.0.0.5", "127.0.0.6", "127.0.0.7"];
        URIBL_PBL = ["127.0.0.10", "127.0.0.11"];
        URIBL_DROP = "127.0.0.9";
      }
    }
    "RSPAMD_URIBL_IMAGES" {
      suffix = "test.uribl";
      check_dkim = true;
      check_emails = false;
      images = true;
      process_script =<<EOD
  function(url, suffix)
    local cr = require "rspamd_cryptobox_hash"
    local h = cr.create(url):base32():sub(1, 32)
    return string.format("%s.%s", h, suffix)
end
EOD;
    }
    "BAD_SUBDOMAIN" {
      suffix = "test7.uribl";
      url_compose_map = "${TESTDIR}/configs/maps/url_compose_map.list";
      check_dkim = true;
      check_emails = false;
    }
  }
}

emails {
  "whitelist" = [
    "rspamd-test.com"
  ]
  rules {
    "RSPAMD_EMAILBL_FULL" {
        dnsbl = "test5.uribl";
        replyto = true;
        }
      "RSPAMD_EMAILBL_DOMAINONLY" {
        dnsbl = "test6.uribl";
        domain_only = true;
        replyto = true;
      }
  }
}