options = {
	filters = ["spf", "dkim", "regexp"]
	url_tld = "{= env.URL_TLD =}"
	pidfile = "{= env.TMPDIR =}/rspamd.pid"
	lua_path = "{= env.INSTALLROOT =}/share/rspamd/lib/?.lua";
	enable_test_patterns = true;
	dns {
		nameserver = ["8.8.8.8", "8.8.4.4"];
		retransmits = 10;
		timeout = 2s;
	}
}
logging = {
	type = "file",
	level = "debug"
	filename = "{= env.TMPDIR =}/rspamd.log"
}
metric = {
	name = "default",
	actions = {
		reject = 100500,
	}
	unknown_weight = 1
}
worker {
	type = normal
	bind_socket = "{= env.LOCAL_ADDR =}:{= env.PORT_NORMAL =}"
	count = 1
	task_timeout = 60s;
}
worker {
        type = controller
        bind_socket = "{= env.LOCAL_ADDR =}:{= env.PORT_CONTROLLER =}"
        count = 1
        secure_ip = ["127.0.0.1", "::1"];
        stats_path = "{= env.TMPDIR =}/stats.ucl"
}
worker {
	type = "rspamd_proxy";
	count = 1;
	timeout = 120;
	upstream {
		local {
			hosts = "{= env.LOCAL_ADDR =}:{= env.PORT_NORMAL =}";
			default = true;
		}
	}
	bind_socket = "{= env.LOCAL_ADDR =}:{= env.PORT_PROXY =}";
	milter = true;
}
modules {
    path = "{= env.TESTDIR =}/../../src/plugins/lua/"
}
lua = "{= env.TESTDIR =}/lua/test_coverage.lua";
lua = "{= env.INSTALLROOT =}/share/rspamd/rules/rspamd.lua"
lua = "{= env.TESTDIR =}/lua/params.lua"
milter_headers {
	extended_spam_headers = true;
	skip_local = false;
	skip_authenticated = false;
}
