options = {
  filters = ["spf", "dkim", "regexp"]
  pidfile = "${RSPAMD_TMPDIR}/rspamd.pid"
  lua_path = "${INSTALLROOT}/share/rspamd/lib/?.lua"
  dns {
    nameserver = ["8.8.8.8", "8.8.4.4"];
    retransmits = 10;
    timeout = 2s;
        fake_records = [{ # ed25519
          name = "test._domainkey.example.com";
          type = txt;
          replies = ["k=ed25519; p=yi50DjK5O9pqbFpNHklsv9lqaS0ArSYu02qp1S0DW1Y="];
        }];
  }
}
clickhouse {
  # Push update when 1000 records are collected (1000 if unset)
  limit = 1;
  # IP:port of Clickhouse server
  server = "localhost:18123";
  allow_local = true;
  retention {
    # disabled by default
    enable = true;
    # drop | detach, please refer to ClickHouse docs for details
    # http://clickhouse-docs.readthedocs.io/en/latest/query_language/queries.html#manipulations-with-partitions-and-parts
    method = "drop";
    # how many month the data should be kept in ClickHouse
    period_months = 3;
    # how often run the cleanup process
    run_every = "7d";
  }
}
logging = {
  type = "file",
  level = "debug"
  filename = "${RSPAMD_TMPDIR}/rspamd.log"
}
metric = {
  name = "default",
  actions = {
    reject = 100500,
  }
  unknown_weight = 1
}
worker {
  type = normal
  bind_socket = ${RSPAMD_LOCAL_ADDR}:${RSPAMD_PORT_NORMAL}
  count = 1
  task_timeout = 60s;
}
worker {
        type = controller
        bind_socket = ${RSPAMD_LOCAL_ADDR}:${RSPAMD_PORT_CONTROLLER}
        count = 1
        secure_ip = ["127.0.0.1", "::1"];
        stats_path = "${RSPAMD_TMPDIR}/stats.ucl"
}
lua = "${RSPAMD_TESTDIR}/lua/test_coverage.lua";
modules {
    path = "${RSPAMD_TESTDIR}/../../src/plugins/lua/"
}
lua = "${INSTALLROOT}/share/rspamd/rules/rspamd.lua"
